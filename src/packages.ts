import { Packages } from "./types";

// Structured as categories with their respective packages
export const packages: Packages = {
    "cosmos-kit": [
        'cosmos-kit',
        '@cosmos-kit/core',
        '@cosmos-kit/react',
        '@cosmos-kit/react-lite',
        '@cosmos-kit/walletconnect'
    ],
    "cosmos-kit-wallets": [
        '@cosmos-kit/frontier-extension',
        '@cosmos-kit/ledger',
        '@cosmos-kit/cosmos-extension-metamask',
        '@cosmos-kit/fin',
        '@cosmos-kit/coin98-extension',
        '@cosmos-kit/okxwallet-extension',
        '@cosmos-kit/trust-mobile',
        '@cosmos-kit/shell',
        '@cosmos-kit/leap-capsule-social-login',
        '@cosmos-kit/cosmostation-extension',
        '@cosmos-kit/vectis',
        '@cosmos-kit/fin-extension',
        '@cosmos-kit/ninji',
        '@cosmos-kit/station-extension',
        '@cosmos-kit/coin98',
        '@cosmos-kit/leap-extension',
        '@cosmos-kit/exodus',
        '@cosmos-kit/trust-extension',
        '@cosmos-kit/leap',
        '@cosmos-kit/xdefi',
        '@cosmos-kit/web3auth',
        '@cosmos-kit/initia-extension',
        '@cosmos-kit/cosmostation',
        '@cosmos-kit/shell-extension',
        '@cosmos-kit/cosmostation-mobile',
        '@cosmos-kit/vectis-extension',
        '@cosmos-kit/station',
        '@cosmos-kit/exodus-extension',
        '@cosmos-kit/leap-mobile',
        '@cosmos-kit/initia',
        '@cosmos-kit/frontier',
        '@cosmos-kit/trust',
        '@cosmos-kit/compass',
        '@cosmos-kit/keplr-mobile',
        '@cosmos-kit/keplr-extension',
        '@cosmos-kit/ninji-extension',
        '@cosmos-kit/compass-extension',
        '@cosmos-kit/xdefi-extension',
        '@cosmos-kit/okxwallet',
        '@cosmos-kit/omni',
        '@cosmos-kit/keplr',
        '@cosmos-kit/omni-mobile',
        '@cosmos-kit/leap-metamask-cosmos-snap',
    ],
    "cosmwasm": [
        '@cosmwasm/ts-codegen',
        '@cosmwasm/ts-codegen-types',
        '@cosmwasm/ts-codegen-ast',
        'wasm-ast-types',
        "cosmwasm-typescript-gen"
    ],
    "interchain-ui": [
        '@interchain-ui/react',
        '@interchain-ui/vue'
    ],
    "telescope": [
        '@cosmology/telescope',
        '@cosmology/lcd',
        '@cosmology/ast',
        '@cosmology/types',
        '@cosmology/utils',
        '@cosmology/proto-parser',

        '@osmonauts/telescope',
        '@osmonauts/lcd',
        '@osmonauts/ast',
        '@osmonauts/utils',
        '@osmonauts/types',
        '@osmonauts/proto-parser'
    ],
    "dydx": ['@dydxprotocol/v4-client-js'],
    "stargaze": [
        'stargazejs',
        '@stargaze-zone/chain',
        '@stargaze-zone/contracts',
        'stargaze-query'
    ],
    "stride": ['stridejs'],
    "quicksilver": ['quicksilverjs'],
    "juno": [
        'juno-network',
        '@juno-network/assets'
    ],
    "osmosis": [
        '@osmonauts/math',
        'osmojs',
        'osmo-query'
    ],
    "chain-registry": [
        '@chain-registry/client',
        '@chain-registry/types',
        '@chain-registry/keplr',
        '@chain-registry/cosmostation',
        '@chain-registry/osmosis',
        '@chain-registry/juno',
        '@chain-registry/assets',
        '@chain-registry/utils',
        'chain-registry'
    ],
    "cosmology": [
        'cosmjs-utils',
        '@cosmology/cli',
        '@cosmology/core',
        'cosmology',
        'interchain',
        'interchain-query',
        'create-cosmos-app',
        'create-cosmwasm-app',
        '@cosmology-ui/react'
    ],
    "starship": [
        'starshipjs',
        '@starship-ci/cli',
        '@starship-ci/client',
    ],
    "launchql": [
        // 'graphile-query',
        // '@launchql/graphile-settings',
        // '@launchql/graphile-testing',
        // 'pg-ast',
        // '@launchql/cli',
        // '@launchql/server',
        '@launchql/db-templates',
        '@launchql/db-transform',
        '@launchql/ext-achievements',
        '@launchql/ext-jobs-queue',
        '@launchql/ext-jwt-claims',
        '@launchql/ext-types',
        '@launchql/faker',
        '@launchql/inflection',
        '@launchql/totp',
        '@pgql/parse',
        '@pgsql/deparser',
        '@pgsql/enums',
        '@pgsql/parser',
        '@pgsql/types',
        '@pgsql/utils',
        '@pyramation/postgraphile-plugin-fulltext-filter',
        'graphile-column-privileges-mutations',
        'libpg-query',
        'pg-proto-parser',
        'pg-query-native-latest',
        'pg-utils',
        'pgsql-deparser',
        'pgsql-enums',
        'pgsql-parser',
    ],
    "protobufs": [
        '@protobufs/cosmos',
        '@protobufs/google',
        '@protobufs/gogoproto',
        '@protobufs/cosmwasm',
        '@protobufs/tendermint',
        '@protobufs/ibc',
        '@protobufs/cosmos_proto',
        '@protobufs/osmosis',
        '@protobufs/secret',
        '@protobufs/juno',
        '@protobufs/akash',
        '@protobufs/regen',
        '@protobufs/pylons',
        '@protobufs/stargaze',
        '@protobufs/bcna',
        '@protobufs/comdex',
        '@protobufs/evmos',
        '@protobufs/axelar',
        '@protobufs/amino',
        '@cosmology/protobufjs',
        "@pyramation/protobufjs"
    ],
    "utils": [
        "ast-stringify",
        "nested-obj",
        "strfy-json",
        "schema-typescript",
        "etag-hash",
        "uuid-hash",
        "inquirerer",
        "publish-scripts",
        "skitch-template"
    ]
};
